# How to Create a Next.js AI Q&A App and Add It to GitHub

## 1. Prerequisites
- Node.js and npm installed
- Git installed
- A GitHub account
- An OpenAI API key

## 2. Create the Next.js App
1. Open a terminal and run:
   ```sh
   npx create-next-app@latest aichat --typescript
   cd aichat
   ```
2. Install any additional dependencies if needed (e.g., Tailwind CSS for styling).

## 3. Set Up the App Structure
- Organize your files as follows:
  - `src/app/page.tsx` (main UI)
  - `src/app/api/ask/route.ts` (API route for OpenAI)
  - `src/app/i18n.ts` (translations)
  - `src/app/HandshakeImage.tsx` (optional image component)
  - `public/` (for static assets)

## 4. Implement the Chat UI
- Use React state to manage language, question, loading, error, and a rolling chat history.
- Example: see `page.tsx` for a rolling chat history implementation.

## 5. Implement the API Route
- In `src/app/api/ask/route.ts`, create a POST handler that:
  - Reads the question and language from the request
  - Uses the OpenAI API to get an answer
  - Returns the answer as JSON
- Use `process.env.OPENAI_API_KEY` for the API key (do not hardcode it).

## 6. Store the OpenAI Key Securely
1. Create a `.env.local` file in your project root:
   ```env
   OPENAI_API_KEY=sk-...your-key-here...
   ```
2. Add `.env.local` to `.gitignore` to keep it out of version control.

## 7. Test the App Locally
- Run the dev server:
  ```sh
  npm run dev
  ```
- Open http://localhost:3000 and test the chat.

## 8. Initialize Git and Commit
1. Initialize git:
   ```sh
   git init
   git add .
   git commit -m "Initial commit: Next.js AI Q&A app"
   ```

## 9. Create a GitHub Repository
- Go to GitHub and create a new repo (do not add a README or .gitignore).

## 10. Push to GitHub
1. Add the remote and push:
   ```sh
   git remote add origin https://github.com/<your-username>/<repo-name>.git
   git branch -M main
   git push -u origin main
   ```

## 11. (If Needed) Remove Secrets from History
- If you accidentally committed secrets, use `git filter-repo` or delete `.git` and start fresh.

## 12. Done!
- Your app is now live locally and on GitHub.
- Share your repo or deploy to Vercel for public access.
